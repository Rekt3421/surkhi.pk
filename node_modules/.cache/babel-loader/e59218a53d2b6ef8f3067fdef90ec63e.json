{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\src\\\\components\\\\Posts.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n    posts {\\n        key\\n        postTitle\\n        postSummary\\n        verdict\\n        category\\n        image\\n    }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Post from './Post';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst GET_POSTS = gql(_templateObject());\n\nconst Posts = () => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: GET_POSTS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return \"Loading...\";\n    if (error) return \"Error! \".concat(error.message);\n    let postArray = data['posts'].reverse();\n    console.log(postArray);\n    return postArray.map(post => {\n      return React.createElement(Post, {\n        postTitle: post.postTitle,\n        postSummary: post.postSummary,\n        image: '../server/server-images/' + post.image,\n        key: post.key,\n        verdict: '../assets/images/surkhi-meter-images/' + post.verdict,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:\\100DaysCodeProjects\\surkhi\\src\\components\\Posts.js"],"names":["React","Component","Post","Query","gql","GET_POSTS","Posts","loading","error","data","message","postArray","reverse","console","log","map","post","postTitle","postSummary","image","key","verdict"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAaA,MAAME,KAAK,GAAG,MAAM;AACZ,SACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,KAA2B;AACxB,QAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AACX,QAAIC,SAAS,GAAGF,IAAI,CAAC,OAAD,CAAJ,CAAcG,OAAd,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WAAOA,SAAS,CAACI,GAAV,CAAeC,IAAI,IAAI;AAC1B,aACA,oBAAC,IAAD;AACI,QAAA,SAAS,EAAIA,IAAI,CAACC,SADtB;AAEI,QAAA,WAAW,EAAED,IAAI,CAACE,WAFtB;AAGI,QAAA,KAAK,EAAI,6BAA6BF,IAAI,CAACG,KAH/C;AAII,QAAA,GAAG,EAAIH,IAAI,CAACI,GAJhB;AAKI,QAAA,OAAO,EAAI,0CAA0CJ,IAAI,CAACK,OAL9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAQH,KATM,CAAP;AAUH,GAhBL,CADJ,CADA;AAuBP,CAxBD;;AA0BA,eAAef,KAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Post from './Post';\r\n\r\nimport {Query} from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst GET_POSTS = gql`\r\n{\r\n    posts {\r\n        key\r\n        postTitle\r\n        postSummary\r\n        verdict\r\n        category\r\n        image\r\n    }\r\n}\r\n`;\r\n\r\nconst Posts = () => {\r\n        return(\r\n        <React.Fragment>\r\n            <Query query={GET_POSTS}>\r\n                {({loading, error, data}) =>{\r\n                    if (loading) return \"Loading...\";\r\n                    if (error) return `Error! ${error.message}`;\r\n                    let postArray = data['posts'].reverse()\r\n                    console.log(postArray)\r\n                    return postArray.map( post => {\r\n                        return (\r\n                        <Post \r\n                            postTitle = {post.postTitle}\r\n                            postSummary={post.postSummary} \r\n                            image = {'../server/server-images/' + post.image}\r\n                            key = {post.key}\r\n                            verdict = {'../assets/images/surkhi-meter-images/' + post.verdict} />\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n            </Query>\r\n        </React.Fragment>\r\n        );\r\n} \r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}
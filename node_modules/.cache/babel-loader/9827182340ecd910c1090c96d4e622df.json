{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar formik_1 = require(\"formik\");\n\nvar Utils_1 = require(\"./Utils\"); // const _clone = require('lodash.clone');\n\n\nvar getClasses = function (use) {\n  var defaults = {\n    form: '',\n    label: '',\n    control: '',\n    error: 'left25pct'\n  };\n\n  if (use === 'bootstrap3' || use === 'bootstrap4') {\n    defaults.label = 'col-sm-3';\n    defaults.control = 'col-sm-9';\n  }\n\n  if (use === 'spectre') {\n    defaults.form = 'form-horizontal';\n    defaults.label = 'col-3 col-sm-12';\n    defaults.control = 'col-9 col-sm-12';\n  }\n\n  if (use === 'semanticui2') {\n    defaults.form = 'ui form';\n  }\n\n  return defaults;\n};\n\nvar UIForm = function (props) {\n  var classes = getClasses(props.use);\n  var horizontal = typeof props.horizontal !== 'undefined' ? props.horizontal.toString() : '';\n  props.formik.ezUse = props.use; // bootstrap, spectre, etc.\n\n  props.formik.ezHorizontal = horizontal;\n  var customCss = Utils_1.clone(props.css || {});\n\n  if (props.formik.ezHorizontal) {\n    customCss.form = customCss.form || classes.form;\n    customCss.label = customCss.label || classes.label;\n    customCss.control = customCss.control || classes.control;\n  }\n\n  props.formik.ezCss = customCss;\n\n  var clonedProps = __assign({}, props // clone\n  );\n\n  clonedProps.horizontal = horizontal;\n  var className = props.className ? classes.form + \" \" + props.className : classes.form;\n  return React.createElement(formik_1.Form, __assign({}, clonedProps, {\n    className: className\n  }));\n};\n\nexports[\"default\"] = formik_1.connect(UIForm);","map":null,"metadata":{},"sourceType":"script"}
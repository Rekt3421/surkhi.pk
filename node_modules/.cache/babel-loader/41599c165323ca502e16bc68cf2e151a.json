{"ast":null,"code":"import _objectSpread from \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\src\\\\components\\\\PostCreator.js\";\nimport React, { Component } from 'react';\nimport Aux from '../hoc/Auxiliary';\nimport TagsInput from 'react-tagsinput';\nimport ReactTags from 'react-tag-autocomplete';\nimport './post.scss';\n\nclass PostCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTagChange = tags => {\n      this.setState({\n        tags\n      });\n    };\n\n    this.handleChangeInput = tag => {\n      this.setState({\n        tag\n      });\n    };\n\n    this.state = {\n      tags: ['Pakistan'],\n      chips: []\n    };\n  }\n\n  handleListTagClick(tag) {\n    this.setState({\n      tags: [...this.state.tags, tag]\n    }); // keep existing tag and add one to it\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({\n        tags: [...this.state.tags, tag],\n        inputValue: ''\n      }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n    tags.splice(index, 1);\n    this.setState({\n      tags\n    }, () => {\n      if (callback) callback();\n    });\n  }\n\n  render() {\n    const styles = {\n      chipsContainer: {\n        width: '100%',\n        ':focus': {\n          color: '#495057',\n          backgroundColor: '#fff',\n          borderColor: '#80bdff',\n          outline: '0',\n          boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'\n        }\n      }\n    };\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      class: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Panel 1\")), React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Please complete required fields marked in red.\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Post Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Enter first name\",\n      name: \"postTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Select Post Category\"), React.createElement(\"div\", {\n      class: \"container my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chips-autocomplete-test\",\n      class: \"chips chips-placeholder chips-autocomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"input-group-text\",\n      for: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Category\"), React.createElement(TagInput, {\n      onTagChange: this.handleTagChange,\n      tags: this.state.tags,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(TagsList, {\n      tags: this.state.tags,\n      onTagDelete: this.handleTagDelete,\n      hashtag: this.props.hashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"tagInput\",\n      className: \"tagInput\",\n      placeholder: \"enter a tag...\",\n      value: this.state.inputValue,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Post Image\"), React.createElement(\"div\", {\n      class: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"input-group-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"btn btn-default btn-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"input-group-text\",\n      for: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Browse\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"imgInp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      id: \"img-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Select Verdict\"), React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"input-group-text\",\n      for: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Verdict\")), React.createElement(\"select\", {\n      class: \"custom-select\",\n      id: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Choose...\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Khara Such\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Such\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Mumkin\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Jhoot\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Jhootay Ka Muun Kala\"))))))), React.createElement(\"div\", {\n      class: \"panel-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-default reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary submit\",\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTag = tags => {\n      if (this.props.onNewTag) this.props.onNewTag(tags);\n      if (this.props.onTagChange) this.props.onTagChange(tags);\n    };\n\n    this.handleInputChange = ({\n      target: {\n        value: inputValue\n      }\n    }) => {\n      inputValue = inputValue == ',' ? '' : inputValue;\n      this.setState({\n        inputValue\n      });\n    };\n\n    this.handleKeyDown = e => {\n      let key = e.key,\n          value = e.target.value;\n      let tags = this.state.tags;\n\n      switch (key) {\n        case 'Tab':\n          if (value) e.preventDefault();\n\n        case 'Enter':\n        case ',':\n          value = value.trim();\n\n          if (value && this.notDuplicate(tags, value)) {\n            this.addTag(value);\n          } else {\n            this.setState({\n              inputValue: ''\n            });\n          }\n\n          break;\n\n        case 'Backspace':\n          if (!value) {\n            this.handleTagDelete(tags.length - 1);\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    this.handleTagDelete = (index, e) => {\n      this.deleteTag(index, () => {\n        this.props.onTagChange(this.state.tags);\n      });\n    };\n\n    this.deleteTag = (index, callback) => {\n      let tags = this.state.tags.slice();\n      tags.splice(index, 1);\n      this.setState({\n        tags\n      }, () => {\n        if (callback) callback();\n      });\n    };\n\n    this.notDuplicate = (tags, newTag) => {\n      return !tags.includes(newTag) || this.props.allowDuplicates;\n    };\n\n    this.addTag = tag => {\n      if (this.notDuplicate(this.state.tags, tag)) {\n        this.setState({\n          tags: [...this.state.tags, tag],\n          inputValue: ''\n        }, () => {\n          this.handleNewTag(this.state.tags);\n        });\n      }\n    };\n\n    this.updateControlledTags = tags => {\n      if (tags && !Helpers.hasDuplicates(tags)) {\n        this.setState({\n          tags\n        }, () => {// this.props.onTagChange(tags);\n        });\n      }\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      this.updateControlledTags(nextProps.tags);\n    };\n\n    this.state = {\n      inputValue: '',\n      tags: this.props.tags || []\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      className: \"tagInputWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(TagsList, {\n      tags: this.state.tags,\n      onTagDelete: this.handleTagDelete,\n      hashtag: this.props.hashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"tagInput\",\n      className: \"tagInput\",\n      placeholder: \"enter a tag...\",\n      value: this.state.inputValue,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter.map(item => {\n      return orig.includes(item);\n    });\n    return !res.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n\n}\n\nconst TagsList = ({\n  tags,\n  onTagDelete,\n  hashtag\n}) => {\n  let list = tags.map((tag, index) => React.createElement(Tag, {\n    name: tag,\n    onDelete: onTagDelete,\n    index: index,\n    hashtag: hashtag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }));\n  return React.createElement(\"ul\", {\n    name: \"tagsList\",\n    className: \"tagsList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, list);\n};\n\nconst Tag = ({\n  name,\n  index,\n  onDelete,\n  hashtag,\n  hashtagStyle\n}) => {\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, hashtag && React.createElement(\"span\", {\n    style: _objectSpread({\n      color: '#898989',\n      fontWeight: 'bold'\n    }, hashtagStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"# \"), name, React.createElement(\"a\", {\n    href: \"#\",\n    onClick: e => onDelete(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"x\"));\n};\n\nexport default PostCreator;","map":{"version":3,"sources":["C:\\100DaysCodeProjects\\surkhi\\src\\components\\PostCreator.js"],"names":["React","Component","Aux","TagsInput","ReactTags","PostCreator","constructor","props","handleTagChange","tags","setState","handleChangeInput","tag","state","chips","handleListTagClick","notDuplicate","newTag","includes","allowDuplicates","addTag","inputValue","handleNewTag","handleTagDelete","index","e","deleteTag","onTagChange","callback","slice","splice","render","styles","chipsContainer","width","color","backgroundColor","borderColor","outline","boxShadow","hashtag","handleInputChange","handleKeyDown","onSubmitHandler","TagInput","onNewTag","target","value","key","preventDefault","trim","length","updateControlledTags","Helpers","hasDuplicates","componentWillReceiveProps","nextProps","contains","orig","filter","res","map","item","array","Set","size","TagsList","onTagDelete","list","Tag","name","onDelete","hashtagStyle","fontWeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Aux from '../hoc/Auxiliary';\r\nimport TagsInput from 'react-tagsinput'\r\nimport ReactTags from 'react-tag-autocomplete';\r\nimport './post.scss';\r\n\r\nclass PostCreator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tags: ['Pakistan'],\r\n            chips: []\r\n        }\r\n    }\r\n    handleTagChange = (tags) => {\r\n        this.setState({tags});\r\n    }\r\n\r\n    handleListTagClick(tag) {\r\n        this.setState({tags: [...this.state.tags, tag]}); // keep existing tag and add one to it\r\n    } \r\n\r\n    handleChangeInput = (tag) => {\r\n        this.setState({tag})\r\n    }\r\n    notDuplicate(tags, newTag) {\r\n        return (!tags.includes(newTag) || this.props.allowDuplicates);\r\n    }\r\n    addTag(tag) {\r\n        if (this.notDuplicate(this.state.tags, tag)) {\r\n            this.setState({tags: [...this.state.tags, tag], inputValue: ''}, () => {\r\n                this.handleNewTag(this.state.tags);\r\n            });\r\n        }\r\n    }\r\n    handleTagDelete(index, e) {\r\n        this.deleteTag(index, () => {\r\n            this.props.onTagChange(this.state.tags);\r\n        });\r\n    }\r\n    deleteTag(index, callback) {\r\n        let tags = this.state.tags.slice();\r\n        \r\n        tags.splice(index, 1);\r\n        this.setState({ tags }, () => {\r\n            if (callback) callback();\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const styles = {\r\n            chipsContainer: {\r\n                width: '100%',\r\n                ':focus':{\r\n                    color: '#495057',\r\n                    backgroundColor: '#fff',\r\n                    borderColor: '#80bdff',\r\n                    outline: '0',\r\n                    boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'\r\n                }\r\n            }\r\n        } \r\n        return(\r\n            <Aux>\r\n            <div class=\"container\">  \r\n                <div class=\"panel panel-default\">\r\n                    <div class=\"panel-heading\">\r\n                        <h3 class=\"panel-title\">Panel 1</h3>\r\n                    </div>\r\n                    <div class=\"panel-body\">\r\n                    <div class=\"alert alert-warning\"> Please complete required fields marked in red.</div>\r\n                    <form>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\"> \r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Post Title</label>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter first name\" name=\"postTitle\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <label class=\"control-label\">Select Post Category</label>\r\n                                <div class=\"container my-5\">\r\n                                    \r\n                                    <div id=\"chips-autocomplete-test\" class=\"chips chips-placeholder chips-autocomplete\"></div>\r\n                                </div>\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <label class=\"input-group-text\" for=\"inputGroupSelect01\">Category</label>\r\n                                        <TagInput \r\n                                            onTagChange = {this.handleTagChange}\r\n                                            tags = {this.state.tags} \r\n                                        />\r\n                                        <TagsList \r\n                                            tags={this.state.tags} \r\n                                            onTagDelete={this.handleTagDelete} \r\n                                            hashtag={this.props.hashtag}\r\n                                        />\r\n                                        <input \r\n                                            name=\"tagInput\" \r\n                                            className=\"tagInput\" \r\n                                            placeholder=\"enter a tag...\" \r\n                                            value={this.state.inputValue} \r\n                                            onChange={this.handleInputChange}\r\n                                            onKeyDown={this.handleKeyDown}\r\n                                        />\r\n                                        \r\n                                        </div>\r\n                                    {/* <Chips theme={theme.styles}\r\n                                        value={this.state.chips}\r\n                                        onChange={this.onChange}\r\n                                        suggestions={[\"Pakistan\", \"Politics\", \"International Affairs\", \"Religion\", \"Economy\", \"Rumor\"]}\r\n                                    /> */}\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n            \r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <label class=\"control-label\">Post Image</label>\r\n                                <div class=\"input-group\">\r\n                                    <span class=\"input-group-btn\">\r\n                                        <span class=\"btn btn-default btn-file\">\r\n                                            <label class=\"input-group-text\" for=\"inputGroupSelect01\">Browse</label>\r\n                                            <input type=\"file\" id=\"imgInp\" />\r\n                                        </span>\r\n                                    </span>\r\n                                    <input type=\"text\" class=\"form-control\" readOnly />\r\n                                </div>\r\n                                <img id='img-upload'/>\r\n                            </div>\r\n                    \r\n                            <div class=\"col-sm-6\">\r\n                                <label class=\"control-label\">Select Verdict</label>\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <label class=\"input-group-text\" for=\"inputGroupSelect01\">Verdict</label>\r\n                                    </div>\r\n                                    <select class=\"custom-select\" id=\"inputGroupSelect01\">\r\n                                        <option selected>Choose...</option>\r\n                                        <option value=\"1\">Khara Such</option>\r\n                                        <option value=\"2\">Such</option>\r\n                                        <option value=\"3\">Mumkin</option>\r\n                                        <option value=\"4\">Jhoot</option>\r\n                                        <option value=\"5\">Jhootay Ka Muun Kala</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"panel-footer\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"pull-right\">\r\n                                <button type=\"button\" class=\"btn btn-default reset\">Reset</button>\r\n                                <button type=\"button\" class=\"btn btn-primary submit\" onSubmit={this.onSubmitHandler}>Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Aux>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass TagInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        inputValue: '',\r\n        tags: this.props.tags || []\r\n        }\r\n    }\r\n\r\n    handleNewTag = (tags) => {\r\n        if (this.props.onNewTag) this.props.onNewTag(tags);\r\n        if (this.props.onTagChange) this.props.onTagChange(tags);\r\n    }\r\n\r\n    handleInputChange = ({target: { value: inputValue }}) => {\r\n        inputValue = inputValue == ',' ? '' : inputValue;\r\n        this.setState({inputValue});\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        let { key, target: {value} } = e;\r\n        let { tags } = this.state;\r\n        switch (key) {\r\n        case 'Tab':\r\n            if (value) e.preventDefault();\r\n        case 'Enter':\r\n        case ',':\r\n            value = value.trim();\r\n            if (value && this.notDuplicate(tags, value)) {\r\n            this.addTag(value);\r\n            } else {\r\n            this.setState({inputValue: ''})\r\n            }\r\n            break;\r\n        case 'Backspace':\r\n            if (!value) {\r\n            this.handleTagDelete(tags.length - 1);\r\n            }\r\n            break;\r\n        default:\r\n        }\r\n    }\r\n\r\n    handleTagDelete = (index, e) => {\r\n        this.deleteTag(index, () => {\r\n        this.props.onTagChange(this.state.tags);\r\n        });\r\n    }\r\n\r\n    deleteTag = (index, callback) => {\r\n        let tags = this.state.tags.slice();\r\n        tags.splice(index, 1);\r\n        this.setState({ tags }, () => {\r\n        if (callback) callback();\r\n        });\r\n    }\r\n\r\n    notDuplicate = (tags, newTag) => {\r\n        return (!tags.includes(newTag) || this.props.allowDuplicates);\r\n    }\r\n\r\n    addTag = tag => {\r\n        if (this.notDuplicate(this.state.tags, tag)) {\r\n        this.setState({tags: [...this.state.tags, tag], inputValue: ''}, () => {\r\n            this.handleNewTag(this.state.tags);\r\n        });\r\n        }\r\n    }\r\n\r\n    updateControlledTags = tags => {\r\n        if (tags && !Helpers.hasDuplicates(tags)) {\r\n        this.setState({ tags }, () => {\r\n            // this.props.onTagChange(tags);\r\n        });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.updateControlledTags(nextProps.tags);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <span className=\"tagInputWrapper\">\r\n            <TagsList \r\n            tags={this.state.tags} \r\n            onTagDelete={this.handleTagDelete} \r\n            hashtag={this.props.hashtag}\r\n            />\r\n            <input \r\n            name=\"tagInput\" \r\n            className=\"tagInput\" \r\n            placeholder=\"enter a tag...\" \r\n            value={this.state.inputValue} \r\n            onChange={this.handleInputChange}\r\n            onKeyDown={this.handleKeyDown}\r\n            />\r\n        </span>\r\n        );\r\n    }\r\n}\r\nclass Helpers {\r\n    static contains(orig, filter) {\r\n        let res = filter.map(item => {\r\n        return orig.includes(item);\r\n        });\r\n        return !res.includes(false);\r\n    }\r\n\r\n    static hasDuplicates(array) {\r\n        return (new Set(array)).size !== array.length;\r\n    }\r\n    }\r\n\r\n\r\nconst TagsList = ({tags, onTagDelete, hashtag}) => {\r\n    let list = tags.map((tag, index) => (\r\n    <Tag \r\n        name={tag} \r\n        onDelete={onTagDelete} \r\n        index={index} \r\n        hashtag={hashtag} />\r\n    ));\r\n    return (\r\n        <ul name=\"tagsList\" className=\"tagsList\">\r\n            {list}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Tag = ({name, index, onDelete, hashtag, hashtagStyle}) => {\r\n    return (\r\n        <li>\r\n            {hashtag && (\r\n                <span style={{color: '#898989', fontWeight: 'bold', ...hashtagStyle}}># </span>\r\n            )}\r\n            {name} \r\n            <a href=\"#\" onClick={e => onDelete(index, e)}>x</a>\r\n    </li>\r\n    );\r\n}\r\n\r\n\r\nexport default PostCreator;\r\n"]},"metadata":{},"sourceType":"module"}
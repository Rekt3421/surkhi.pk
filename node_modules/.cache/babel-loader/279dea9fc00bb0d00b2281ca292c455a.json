{"ast":null,"code":"var _jsxFileName = \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloProvider } from \"react-apollo\";\nimport { createUploadLink } from 'apollo-upload-client';\nimport { createHttpLink, HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport ApolloClient from \"apollo-client\";\nimport Home from './components/Home';\nimport Contact from './components/contact';\nimport NewsLetter from './components/newsletter';\nimport FAQs from './components/faq';\nimport FaqComponents from './components/faq-topics/faq-topics';\nimport SupportPage from './components/support-us';\nimport './assets/stylesheets/App.scss';\nimport ScrollToTop from './components/Helpers/ScrolltoTop';\nimport Services from './components/Services';\nconst app_uri = process.env.REACT_APP_GRAPHQL_URL || 'http://localhost:4000/graphql';\nconsole.log(\"The app uri: \", app_uri);\nconst uploadLink = createUploadLink({\n  uri: app_uri\n});\nconst client = new ApolloClient({\n  link: ApolloLink.from([uploadLink]),\n  cache: new InMemoryCache()\n});\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ScrollToTop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: process.env.PUBLIC_URL,\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contact\",\n      component: Contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/services\",\n      component: Services,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/support-us\",\n      component: SupportPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newsletter\",\n      component: NewsLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/faqs\",\n      exact: true,\n      component: FAQs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/faqs/:topicId\",\n      component: FaqComponents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/posts/:postId\",\n      component: FaqComponents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:\\100DaysCodeProjects\\surkhi\\src\\App.js"],"names":["React","BrowserRouter","Router","Route","Switch","ApolloProvider","createUploadLink","createHttpLink","HttpLink","InMemoryCache","ApolloLink","ApolloClient","Home","Contact","NewsLetter","FAQs","FaqComponents","SupportPage","ScrollToTop","Services","app_uri","process","env","REACT_APP_GRAPHQL_URL","console","log","uploadLink","uri","client","link","from","cache","App","Component","render","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {ApolloProvider} from \"react-apollo\";\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport {createHttpLink, HttpLink} from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { ApolloLink } from 'apollo-link';\r\nimport ApolloClient from \"apollo-client\";\r\n\r\nimport Home from './components/Home'\r\nimport Contact from './components/contact';\r\nimport NewsLetter from './components/newsletter';\r\nimport FAQs from './components/faq';\r\nimport FaqComponents from './components/faq-topics/faq-topics';\r\nimport SupportPage from './components/support-us';\r\nimport './assets/stylesheets/App.scss';\r\nimport ScrollToTop from './components/Helpers/ScrolltoTop';\r\nimport Services from './components/Services';\r\n\r\n\r\nconst app_uri = process.env.REACT_APP_GRAPHQL_URL || 'http://localhost:4000/graphql'\r\nconsole.log(\"The app uri: \", app_uri);\r\nconst uploadLink = createUploadLink({ uri: app_uri });\r\nconst client = new ApolloClient({\r\n    link: ApolloLink.from([uploadLink]),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n      <ApolloProvider client={client}>  \r\n        <React.Fragment>\r\n          <Router>\r\n            <Switch>\r\n              <ScrollToTop>\r\n                {/* Defing all the necessary routes here */}\r\n                <Route path={process.env.PUBLIC_URL} exact component={Home} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route path=\"/services\" component={Services} />\r\n                <Route path=\"/support-us\" component={SupportPage} />\r\n                <Route path=\"/newsletter\" component={NewsLetter} />\r\n                <Route path=\"/faqs\" exact component={FAQs} />\r\n                <Route path=\"/faqs/:topicId\" component={FaqComponents} />\r\n                <Route path=\"/posts/:postId\" component={FaqComponents} />\r\n              </ScrollToTop>\r\n            </Switch>\r\n          </Router>\r\n        </React.Fragment>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
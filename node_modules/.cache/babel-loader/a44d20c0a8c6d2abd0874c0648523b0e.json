{"ast":null,"code":"import _objectSpread from \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\100DaysCodeProjects\\\\surkhi\\\\src\\\\components\\\\PostCreator.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation AddPost($title: String!, $category: [String!]!, $summary: String!, $image: Upload!, $verdict: String!){\\n    addPost(title: $title, category: $category, summary: $summary, image: $image, verdict: $verdict){\\n        title\\n        category\\n        summary\\n        image\\n        verdict\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Aux from '../hoc/Auxiliary';\nimport TagsInput from 'react-tagsinput';\nimport ReactTags from 'react-tag-autocomplete';\nimport '../assets/stylesheets/post.scss'; // Apollo and Graphql\n\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst ADD_POSTS = gql(_templateObject());\n\nclass PostCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTagChange = tags => {\n      this.setState({\n        tags\n      });\n    };\n\n    this.handleChangeInput = tag => {\n      this.setState({\n        tag\n      });\n    };\n\n    this.resetHandler = ({\n      fields,\n      form\n    }) => {\n      this.setState({\n        password: ''\n      }); // manually reset controlled fields (\"password\")\n    };\n\n    this.fileUploadHandler = event => {\n      console.log(event.target.file);\n    };\n\n    this.state = {\n      tags: ['Pakistan'],\n      chips: []\n    };\n  }\n\n  handleListTagClick(tag) {\n    this.setState({\n      tags: [...this.state.tags, tag]\n    }); // keep existing tag and add one to it\n  }\n\n  notDuplicate(tags, newTag) {\n    return !tags.includes(newTag) || this.props.allowDuplicates;\n  }\n\n  addTag(tag) {\n    if (this.notDuplicate(this.state.tags, tag)) {\n      this.setState({\n        tags: [...this.state.tags, tag],\n        inputValue: ''\n      }, () => {\n        this.handleNewTag(this.state.tags);\n      });\n    }\n  }\n\n  handleTagDelete(index, e) {\n    this.deleteTag(index, () => {\n      this.props.onTagChange(this.state.tags);\n    });\n  }\n\n  deleteTag(index, callback) {\n    let tags = this.state.tags.slice();\n    tags.splice(index, 1);\n    this.setState({\n      tags\n    }, () => {\n      if (callback) callback();\n    });\n  }\n\n  render() {\n    let titleInput;\n    let categoryInput;\n    let summaryInput;\n    let imageInput;\n    let verdictInput;\n    let imageUrl = '';\n\n    let urlChange = e => {\n      imageUrl = e.target.value;\n    };\n\n    const styles = {\n      chipsContainer: {\n        width: '100%',\n        ':focus': {\n          color: '#495057',\n          backgroundColor: '#fff',\n          borderColor: '#80bdff',\n          outline: '0',\n          boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'\n        }\n      }\n    };\n    return React.createElement(Mutation, {\n      mutation: ADD_POSTS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, addPost => React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container postcreator-widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Post Creator Panel\")), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"For editorial purposes only: Please write the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"name\"), \" and \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"summary\"), \" of the article, then choose an appropriate \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"image\"), \" to display. Write the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"category\"), \" of the article that it belongs to (You may choose multiple). Lastly, select the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Surkhi Rating\"), \" before pressing the \\\"Submit\\\" button. You may choose to start over by pressing \\\"Reset\\\".\")), React.createElement(\"form\", {\n      id: \"post-form\",\n      onSubmit: e => {\n        e.preventDefault();\n        addPost({\n          variables: {\n            title: titleInput.value,\n            category: categoryInput.value,\n            summary: summaryInput.value,\n            image: imageInput,\n            verdict: verdictInput.value\n          }\n        });\n        titleInput.value = \"\";\n        categoryInput.value = \"\";\n        summaryInput.value = \"\";\n        verdictInput.value = \"\";\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Post Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter first name\",\n      name: \"postTitle\",\n      required: true,\n      ref: node => {\n        titleInput = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Select Post Category\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-group-text\",\n      for: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"input\", {\n      ref: node => {\n        categoryInput = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Post Summary\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      className: \"form-control\",\n      placeholder: \"Enter Summary...\",\n      name: \"postSummary\",\n      ref: node => {\n        summaryInput = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Post Image\"), React.createElement(\"div\", {\n      class: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"btn btn-default btn-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Browse\\u2026 \", React.createElement(\"input\", {\n      type: \"file\",\n      id: \"imgInp\",\n      onChange: ({\n        target: {\n          files\n        }\n      }) => {\n        imageInput = files[0];\n        console.log(imageInput);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"text\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Select Verdict\"), React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-group-text\",\n      for: \"inputGroupSelect01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Verdict\")), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect01\",\n      ref: node => {\n        verdictInput = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Choose...\"), React.createElement(\"option\", {\n      value: \"KharaSuch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Khara Such\"), React.createElement(\"option\", {\n      value: \"Such\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Such\"), React.createElement(\"option\", {\n      value: \"Mumkin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Mumkin\"), React.createElement(\"option\", {\n      value: \"Jhoot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Jhoot\"), React.createElement(\"option\", {\n      value: \"FullJhoot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Jhootay Ka Muun Kala\"))))))), React.createElement(\"div\", {\n      className: \"panel-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger reset\",\n      onReset: this.resetHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success submit\",\n      form: \"post-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Submit\")))))))));\n  }\n\n}\n\nclass TagInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTag = tags => {\n      if (this.props.onNewTag) this.props.onNewTag(tags);\n      if (this.props.onTagChange) this.props.onTagChange(tags);\n    };\n\n    this.handleInputChange = ({\n      target: {\n        value: inputValue\n      }\n    }) => {\n      inputValue = inputValue == ',' ? '' : inputValue;\n      this.setState({\n        inputValue\n      });\n    };\n\n    this.handleKeyDown = e => {\n      let key = e.key,\n          value = e.target.value;\n      let tags = this.state.tags;\n\n      switch (key) {\n        case 'Tab':\n          if (value) e.preventDefault();\n\n        case 'Enter':\n        case ',':\n          value = value.trim();\n\n          if (value && this.notDuplicate(tags, value)) {\n            this.addTag(value);\n          } else {\n            this.setState({\n              inputValue: ''\n            });\n          }\n\n          break;\n\n        case 'Backspace':\n          if (!value) {\n            this.handleTagDelete(tags.length - 1);\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    this.handleTagDelete = (index, e) => {\n      this.deleteTag(index, () => {\n        this.props.onTagChange(this.state.tags);\n      });\n    };\n\n    this.deleteTag = (index, callback) => {\n      let tags = this.state.tags.slice();\n      tags.splice(index, 1);\n      this.setState({\n        tags\n      }, () => {\n        if (callback) callback();\n      });\n    };\n\n    this.notDuplicate = (tags, newTag) => {\n      return !tags.includes(newTag) || this.props.allowDuplicates;\n    };\n\n    this.addTag = tag => {\n      if (this.notDuplicate(this.state.tags, tag)) {\n        this.setState({\n          tags: [...this.state.tags, tag],\n          inputValue: ''\n        }, () => {\n          this.handleNewTag(this.state.tags);\n        });\n      }\n    };\n\n    this.updateControlledTags = tags => {\n      if (tags && !Helpers.hasDuplicates(tags)) {\n        this.setState({\n          tags\n        }, () => {// this.props.onTagChange(tags);\n        });\n      }\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      this.updateControlledTags(nextProps.tags);\n    };\n\n    this.state = {\n      inputValue: '',\n      tags: this.props.tags || []\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      className: \"tagInputWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(TagsList, {\n      tags: this.state.tags,\n      onTagDelete: this.handleTagDelete,\n      hashtag: this.props.hashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"tagInput\",\n      className: \"tagInput\",\n      placeholder: \"enter a tag...\",\n      value: this.state.inputValue,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Helpers {\n  static contains(orig, filter) {\n    let res = filter.map(item => {\n      return orig.includes(item);\n    });\n    return !res.includes(false);\n  }\n\n  static hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n\n}\n\nconst TagsList = ({\n  tags,\n  onTagDelete,\n  hashtag\n}) => {\n  let list = tags.map((tag, index) => React.createElement(Tag, {\n    name: tag,\n    onDelete: onTagDelete,\n    index: index,\n    hashtag: hashtag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }));\n  return React.createElement(\"ul\", {\n    name: \"tagsList\",\n    className: \"tagsList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, list);\n};\n\nconst Tag = ({\n  name,\n  index,\n  onDelete,\n  hashtag,\n  hashtagStyle\n}) => {\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, hashtag && React.createElement(\"span\", {\n    style: _objectSpread({\n      color: '#898989',\n      fontWeight: 'bold'\n    }, hashtagStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, \"# \"), name, React.createElement(\"a\", {\n    href: \"#\",\n    onClick: e => onDelete(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, \"x\"));\n};\n\nexport default PostCreator;","map":{"version":3,"sources":["C:\\100DaysCodeProjects\\surkhi\\src\\components\\PostCreator.js"],"names":["React","Component","Aux","TagsInput","ReactTags","Query","Mutation","gql","ADD_POSTS","PostCreator","constructor","props","handleTagChange","tags","setState","handleChangeInput","tag","resetHandler","fields","form","password","fileUploadHandler","event","console","log","target","file","state","chips","handleListTagClick","notDuplicate","newTag","includes","allowDuplicates","addTag","inputValue","handleNewTag","handleTagDelete","index","e","deleteTag","onTagChange","callback","slice","splice","render","titleInput","categoryInput","summaryInput","imageInput","verdictInput","imageUrl","urlChange","value","styles","chipsContainer","width","color","backgroundColor","borderColor","outline","boxShadow","addPost","preventDefault","variables","title","category","summary","image","verdict","node","files","TagInput","onNewTag","handleInputChange","handleKeyDown","key","trim","length","updateControlledTags","Helpers","hasDuplicates","componentWillReceiveProps","nextProps","hashtag","contains","orig","filter","res","map","item","array","Set","size","TagsList","onTagDelete","list","Tag","name","onDelete","hashtagStyle","fontWeight"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,iCAAP,C,CAEA;;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,cAA9B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAYA,MAAME,WAAN,SAA0BR,SAA1B,CAAoC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,eARkB,GAQCC,IAAD,IAAU;AACxB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACH,KAViB;;AAAA,SAgBlBE,iBAhBkB,GAgBGC,GAAD,IAAS;AACzB,WAAKF,QAAL,CAAc;AAACE,QAAAA;AAAD,OAAd;AACH,KAlBiB;;AAAA,SA6ClBC,YA7CkB,GA6CH,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,KAAsB;AACjC,WAAKL,QAAL,CAAc;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EADiC,CACD;AACnC,KA/CiB;;AAAA,SAiDlBC,iBAjDkB,GAiDGC,KAAD,IAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB;AACH,KAnDiB;;AAEd,SAAKC,KAAL,GAAa;AAETd,MAAAA,IAAI,EAAE,CAAC,UAAD,CAFG;AAGTe,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAKDC,EAAAA,kBAAkB,CAACb,GAAD,EAAM;AACpB,SAAKF,QAAL,CAAc;AAACD,MAAAA,IAAI,EAAE,CAAC,GAAG,KAAKc,KAAL,CAAWd,IAAf,EAAqBG,GAArB;AAAP,KAAd,EADoB,CAC8B;AACrD;;AAKDc,EAAAA,YAAY,CAACjB,IAAD,EAAOkB,MAAP,EAAe;AACvB,WAAQ,CAAClB,IAAI,CAACmB,QAAL,CAAcD,MAAd,CAAD,IAA0B,KAAKpB,KAAL,CAAWsB,eAA7C;AACH;;AACDC,EAAAA,MAAM,CAAClB,GAAD,EAAM;AACR,QAAI,KAAKc,YAAL,CAAkB,KAAKH,KAAL,CAAWd,IAA7B,EAAmCG,GAAnC,CAAJ,EAA6C;AACzC,WAAKF,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAE,CAAC,GAAG,KAAKc,KAAL,CAAWd,IAAf,EAAqBG,GAArB,CAAP;AAAkCmB,QAAAA,UAAU,EAAE;AAA9C,OAAd,EAAiE,MAAM;AACnE,aAAKC,YAAL,CAAkB,KAAKT,KAAL,CAAWd,IAA7B;AACH,OAFD;AAGH;AACJ;;AACDwB,EAAAA,eAAe,CAACC,KAAD,EAAQC,CAAR,EAAW;AACtB,SAAKC,SAAL,CAAeF,KAAf,EAAsB,MAAM;AACxB,WAAK3B,KAAL,CAAW8B,WAAX,CAAuB,KAAKd,KAAL,CAAWd,IAAlC;AACH,KAFD;AAGH;;AACD2B,EAAAA,SAAS,CAACF,KAAD,EAAQI,QAAR,EAAkB;AACvB,QAAI7B,IAAI,GAAG,KAAKc,KAAL,CAAWd,IAAX,CAAgB8B,KAAhB,EAAX;AAEA9B,IAAAA,IAAI,CAAC+B,MAAL,CAAYN,KAAZ,EAAmB,CAAnB;AACA,SAAKxB,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,EAAwB,MAAM;AAC1B,UAAI6B,QAAJ,EAAcA,QAAQ;AACzB,KAFD;AAGH;;AAYDG,EAAAA,MAAM,GAAE;AACJ,QAAIC,UAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,YAAJ;AAEA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIC,SAAS,GAAIb,CAAD,IAAO;AACnBY,MAAAA,QAAQ,GAAGZ,CAAC,CAACd,MAAF,CAAS4B,KAApB;AACH,KAFD;;AAGA,UAAMC,MAAM,GAAG;AACXC,MAAAA,cAAc,EAAE;AACZC,QAAAA,KAAK,EAAE,MADK;AAEZ,kBAAS;AACLC,UAAAA,KAAK,EAAE,SADF;AAELC,UAAAA,eAAe,EAAE,MAFZ;AAGLC,UAAAA,WAAW,EAAE,SAHR;AAILC,UAAAA,OAAO,EAAE,GAJJ;AAKLC,UAAAA,SAAS,EAAE;AALN;AAFG;AADL,KAAf;AAYA,WACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAErD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsD,OAAO,IACJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjD,WAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA3E,kDACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADxC,6BACqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrF,uFAEiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFjF,gGADJ,CADA,EASA;AACI,MAAA,EAAE,EAAG,WADT;AAEI,MAAA,QAAQ,EAAEvB,CAAC,IAAE;AACTA,QAAAA,CAAC,CAACwB,cAAF;AACAD,QAAAA,OAAO,CAAC;AAACE,UAAAA,SAAS,EAAE;AAACC,YAAAA,KAAK,EAAEnB,UAAU,CAACO,KAAnB;AACAa,YAAAA,QAAQ,EAAEnB,aAAa,CAACM,KADxB;AAEAc,YAAAA,OAAO,EAAEnB,YAAY,CAACK,KAFtB;AAGAe,YAAAA,KAAK,EAAEnB,UAHP;AAIAoB,YAAAA,OAAO,EAAEnB,YAAY,CAACG;AAJtB;AAAZ,SAAD,CAAP;AAKAP,QAAAA,UAAU,CAACO,KAAX,GAAmB,EAAnB;AACAN,QAAAA,aAAa,CAACM,KAAd,GAAsB,EAAtB;AACAL,QAAAA,YAAY,CAACK,KAAb,GAAqB,EAArB;AACAH,QAAAA,YAAY,CAACG,KAAb,GAAqB,EAArB;AACP,OAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,WAAW,EAAC,kBAFhB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,GAAG,EAAIiB,IAAI,IAAE;AACTxB,QAAAA,UAAU,GAAGwB,IAAb;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAcI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,GAAG,EAAC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACI,MAAA,GAAG,EAAIA,IAAI,IAAE;AACTvB,QAAAA,aAAa,GAAGuB,IAAhB;AACH,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFJ,CADJ,CAdJ,CAdJ,EA4CI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAgD,MAAA,WAAW,EAAC,kBAA5D;AAA+E,MAAA,IAAI,EAAC,aAApF;AACA,MAAA,GAAG,EAAIA,IAAI,IAAE;AACTtB,QAAAA,YAAY,GAAGsB,IAAf;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,CA5CJ,EAwDI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,0BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACY;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AACR,MAAA,QAAQ,EAAE,CAAC;AAAC7C,QAAAA,MAAM,EAAC;AAAC8C,UAAAA;AAAD;AAAR,OAAD,KAAoB;AAC1BtB,QAAAA,UAAU,GAAGsB,KAAK,CAAC,CAAD,CAAlB;AACAhD,QAAAA,OAAO,CAACC,GAAR,CAAYyB,UAAZ;AACH,OAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CADJ,CADJ,EAUI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAFJ,CADJ,EAgBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,GAAG,EAAC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,EAII;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,oBAArC;AACA,MAAA,GAAG,EAAIqB,IAAI,IAAE;AACTpB,QAAAA,YAAY,GAAGoB,IAAf;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,EASI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATJ,CAJJ,CAFJ,CAhBJ,CAxDJ,CATA,CAJJ,EA2GA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAuD,MAAA,OAAO,EAAE,KAAKrD,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAyD,MAAA,IAAI,EAAC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ,CADJ,CA3GA,CADJ,CADA,CAFR,CADJ;AAgIH;;AA7M+B;;AAiNpC,MAAMuD,QAAN,SAAuBvE,SAAvB,CAAiC;AAC7BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnByB,YARmB,GAQHvB,IAAD,IAAU;AACrB,UAAI,KAAKF,KAAL,CAAW8D,QAAf,EAAyB,KAAK9D,KAAL,CAAW8D,QAAX,CAAoB5D,IAApB;AACzB,UAAI,KAAKF,KAAL,CAAW8B,WAAf,EAA4B,KAAK9B,KAAL,CAAW8B,WAAX,CAAuB5B,IAAvB;AAC/B,KAXkB;;AAAA,SAanB6D,iBAbmB,GAaC,CAAC;AAACjD,MAAAA,MAAM,EAAE;AAAE4B,QAAAA,KAAK,EAAElB;AAAT;AAAT,KAAD,KAAqC;AACrDA,MAAAA,UAAU,GAAGA,UAAU,IAAI,GAAd,GAAoB,EAApB,GAAyBA,UAAtC;AACA,WAAKrB,QAAL,CAAc;AAACqB,QAAAA;AAAD,OAAd;AACH,KAhBkB;;AAAA,SAkBnBwC,aAlBmB,GAkBHpC,CAAC,IAAI;AAAA,UACXqC,GADW,GACcrC,CADd,CACXqC,GADW;AAAA,UACGvB,KADH,GACcd,CADd,CACNd,MADM,CACG4B,KADH;AAAA,UAEXxC,IAFW,GAEF,KAAKc,KAFH,CAEXd,IAFW;;AAGjB,cAAQ+D,GAAR;AACA,aAAK,KAAL;AACI,cAAIvB,KAAJ,EAAWd,CAAC,CAACwB,cAAF;;AACf,aAAK,OAAL;AACA,aAAK,GAAL;AACIV,UAAAA,KAAK,GAAGA,KAAK,CAACwB,IAAN,EAAR;;AACA,cAAIxB,KAAK,IAAI,KAAKvB,YAAL,CAAkBjB,IAAlB,EAAwBwC,KAAxB,CAAb,EAA6C;AAC7C,iBAAKnB,MAAL,CAAYmB,KAAZ;AACC,WAFD,MAEO;AACP,iBAAKvC,QAAL,CAAc;AAACqB,cAAAA,UAAU,EAAE;AAAb,aAAd;AACC;;AACD;;AACJ,aAAK,WAAL;AACI,cAAI,CAACkB,KAAL,EAAY;AACZ,iBAAKhB,eAAL,CAAqBxB,IAAI,CAACiE,MAAL,GAAc,CAAnC;AACC;;AACD;;AACJ;AAjBA;AAmBH,KAxCkB;;AAAA,SA0CnBzC,eA1CmB,GA0CD,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC5B,WAAKC,SAAL,CAAeF,KAAf,EAAsB,MAAM;AAC5B,aAAK3B,KAAL,CAAW8B,WAAX,CAAuB,KAAKd,KAAL,CAAWd,IAAlC;AACC,OAFD;AAGH,KA9CkB;;AAAA,SAgDnB2B,SAhDmB,GAgDP,CAACF,KAAD,EAAQI,QAAR,KAAqB;AAC7B,UAAI7B,IAAI,GAAG,KAAKc,KAAL,CAAWd,IAAX,CAAgB8B,KAAhB,EAAX;AACA9B,MAAAA,IAAI,CAAC+B,MAAL,CAAYN,KAAZ,EAAmB,CAAnB;AACA,WAAKxB,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,EAAwB,MAAM;AAC9B,YAAI6B,QAAJ,EAAcA,QAAQ;AACrB,OAFD;AAGH,KAtDkB;;AAAA,SAwDnBZ,YAxDmB,GAwDJ,CAACjB,IAAD,EAAOkB,MAAP,KAAkB;AAC7B,aAAQ,CAAClB,IAAI,CAACmB,QAAL,CAAcD,MAAd,CAAD,IAA0B,KAAKpB,KAAL,CAAWsB,eAA7C;AACH,KA1DkB;;AAAA,SA4DnBC,MA5DmB,GA4DVlB,GAAG,IAAI;AACZ,UAAI,KAAKc,YAAL,CAAkB,KAAKH,KAAL,CAAWd,IAA7B,EAAmCG,GAAnC,CAAJ,EAA6C;AAC7C,aAAKF,QAAL,CAAc;AAACD,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKc,KAAL,CAAWd,IAAf,EAAqBG,GAArB,CAAP;AAAkCmB,UAAAA,UAAU,EAAE;AAA9C,SAAd,EAAiE,MAAM;AACnE,eAAKC,YAAL,CAAkB,KAAKT,KAAL,CAAWd,IAA7B;AACH,SAFD;AAGC;AACJ,KAlEkB;;AAAA,SAoEnBkE,oBApEmB,GAoEIlE,IAAI,IAAI;AAC3B,UAAIA,IAAI,IAAI,CAACmE,OAAO,CAACC,aAAR,CAAsBpE,IAAtB,CAAb,EAA0C;AAC1C,aAAKC,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd,EAAwB,MAAM,CAC1B;AACH,SAFD;AAGC;AACJ,KA1EkB;;AAAA,SA4EnBqE,yBA5EmB,GA4EUC,SAAD,IAAe;AACvC,WAAKJ,oBAAL,CAA0BI,SAAS,CAACtE,IAApC;AACH,KA9EkB;;AAEf,SAAKc,KAAL,GAAa;AACbQ,MAAAA,UAAU,EAAE,EADC;AAEbtB,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,IAAmB;AAFZ,KAAb;AAIH;;AA0EDgC,EAAAA,MAAM,GAAG;AACL,WACA;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACA,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWd,IADjB;AAEA,MAAA,WAAW,EAAE,KAAKwB,eAFlB;AAGA,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWyE,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,SAAS,EAAC,UAFV;AAGA,MAAA,WAAW,EAAC,gBAHZ;AAIA,MAAA,KAAK,EAAE,KAAKzD,KAAL,CAAWQ,UAJlB;AAKA,MAAA,QAAQ,EAAE,KAAKuC,iBALf;AAMA,MAAA,SAAS,EAAE,KAAKC,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAiBH;;AAnG4B;;AAqGjC,MAAMK,OAAN,CAAc;AACV,SAAOK,QAAP,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;AAC1B,QAAIC,GAAG,GAAGD,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAI;AAC7B,aAAOJ,IAAI,CAACtD,QAAL,CAAc0D,IAAd,CAAP;AACC,KAFS,CAAV;AAGA,WAAO,CAACF,GAAG,CAACxD,QAAJ,CAAa,KAAb,CAAR;AACH;;AAED,SAAOiD,aAAP,CAAqBU,KAArB,EAA4B;AACxB,WAAQ,IAAIC,GAAJ,CAAQD,KAAR,CAAD,CAAiBE,IAAjB,KAA0BF,KAAK,CAACb,MAAvC;AACH;;AAVS;;AAcd,MAAMgB,QAAQ,GAAG,CAAC;AAACjF,EAAAA,IAAD;AAAOkF,EAAAA,WAAP;AAAoBX,EAAAA;AAApB,CAAD,KAAkC;AAC/C,MAAIY,IAAI,GAAGnF,IAAI,CAAC4E,GAAL,CAAS,CAACzE,GAAD,EAAMsB,KAAN,KACpB,oBAAC,GAAD;AACI,IAAA,IAAI,EAAEtB,GADV;AAEI,IAAA,QAAQ,EAAE+E,WAFd;AAGI,IAAA,KAAK,EAAEzD,KAHX;AAII,IAAA,OAAO,EAAE8C,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,CAAX;AAOA,SACI;AAAI,IAAA,IAAI,EAAC,UAAT;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,IADL,CADJ;AAKH,CAbD;;AAeA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAO5D,EAAAA,KAAP;AAAc6D,EAAAA,QAAd;AAAwBf,EAAAA,OAAxB;AAAiCgB,EAAAA;AAAjC,CAAD,KAAoD;AAC5D,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,OAAO,IACJ;AAAM,IAAA,KAAK;AAAG3B,MAAAA,KAAK,EAAE,SAAV;AAAqB4C,MAAAA,UAAU,EAAE;AAAjC,OAA4CD,YAA5C,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR,EAIKF,IAJL,EAKI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE3D,CAAC,IAAI4D,QAAQ,CAAC7D,KAAD,EAAQC,CAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADJ;AASH,CAVD;;AAaA,eAAe9B,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Aux from '../hoc/Auxiliary';\r\nimport TagsInput from 'react-tagsinput'\r\nimport ReactTags from 'react-tag-autocomplete';\r\nimport '../assets/stylesheets/post.scss';\r\n\r\n// Apollo and Graphql\r\nimport {Query, Mutation} from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst ADD_POSTS = gql`\r\n  mutation AddPost($title: String!, $category: [String!]!, $summary: String!, $image: Upload!, $verdict: String!){\r\n    addPost(title: $title, category: $category, summary: $summary, image: $image, verdict: $verdict){\r\n        title\r\n        category\r\n        summary\r\n        image\r\n        verdict\r\n    }\r\n  }\r\n`;\r\n\r\nclass PostCreator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            tags: ['Pakistan'],\r\n            chips: []\r\n        }\r\n    }\r\n    handleTagChange = (tags) => {\r\n        this.setState({tags});\r\n    }\r\n\r\n    handleListTagClick(tag) {\r\n        this.setState({tags: [...this.state.tags, tag]}); // keep existing tag and add one to it\r\n    } \r\n\r\n    handleChangeInput = (tag) => {\r\n        this.setState({tag})\r\n    }\r\n    notDuplicate(tags, newTag) {\r\n        return (!tags.includes(newTag) || this.props.allowDuplicates);\r\n    }\r\n    addTag(tag) {\r\n        if (this.notDuplicate(this.state.tags, tag)) {\r\n            this.setState({tags: [...this.state.tags, tag], inputValue: ''}, () => {\r\n                this.handleNewTag(this.state.tags);\r\n            });\r\n        }\r\n    }\r\n    handleTagDelete(index, e) {\r\n        this.deleteTag(index, () => {\r\n            this.props.onTagChange(this.state.tags);\r\n        });\r\n    }\r\n    deleteTag(index, callback) {\r\n        let tags = this.state.tags.slice();\r\n        \r\n        tags.splice(index, 1);\r\n        this.setState({ tags }, () => {\r\n            if (callback) callback();\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    resetHandler = ({ fields, form }) => {\r\n        this.setState({ password: '' }) // manually reset controlled fields (\"password\")\r\n    }\r\n\r\n    fileUploadHandler = (event) =>{\r\n        console.log(event.target.file)\r\n    }\r\n\r\n    render(){\r\n        let titleInput\r\n        let categoryInput\r\n        let summaryInput\r\n        let imageInput\r\n        let verdictInput\r\n\r\n        let imageUrl = '';\r\n        let urlChange = (e) => {\r\n            imageUrl = e.target.value;\r\n        }\r\n        const styles = {\r\n            chipsContainer: {\r\n                width: '100%',\r\n                ':focus':{\r\n                    color: '#495057',\r\n                    backgroundColor: '#fff',\r\n                    borderColor: '#80bdff',\r\n                    outline: '0',\r\n                    boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'\r\n                }\r\n            }\r\n        } \r\n        return(\r\n            <Mutation mutation={ADD_POSTS}>\r\n                {addPost=>(\r\n                    <Aux>\r\n                    <div className=\"container postcreator-widget\">  \r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h3 className=\"panel-title\">Post Creator Panel</h3>\r\n                            </div>\r\n                            <div className=\"panel-body\">\r\n                            <div className=\"instructions\"> \r\n                                <p>For editorial purposes only: Please write the <strong>name</strong> and <strong>summary</strong> of the \r\n                                    article, then choose an appropriate <strong>image</strong> to display. Write the <strong>category</strong> of\r\n                                    the article that it belongs to (You may choose multiple). Lastly, select the <strong>Surkhi \r\n                                    Rating</strong> before pressing the \"Submit\" button. You may choose to start over by pressing \r\n                                    \"Reset\".\r\n                                </p>\r\n                            </div>\r\n                            <form\r\n                                id = 'post-form' \r\n                                onSubmit={e=>{\r\n                                    e.preventDefault()\r\n                                    addPost({variables: {title: titleInput.value,\r\n                                                        category: categoryInput.value,\r\n                                                        summary: summaryInput.value,\r\n                                                        image: imageInput,\r\n                                                        verdict: verdictInput.value}})\r\n                                    titleInput.value = \"\"\r\n                                    categoryInput.value = \"\"\r\n                                    summaryInput.value = \"\"\r\n                                    verdictInput.value = \"\"\r\n                            }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\"> \r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Post Title</label>\r\n                                            <input type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Enter first name\" \r\n                                                name=\"postTitle\"\r\n                                                required \r\n                                                ref = {node=>{\r\n                                                    titleInput = node\r\n                                                }}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Select Post Category</label>\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <label className=\"input-group-text\" for=\"inputGroupSelect01\">Category</label>\r\n                                                    <input \r\n                                                        ref = {node=>{\r\n                                                            categoryInput = node\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\"> \r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Post Summary</label>\r\n                                            <input type=\"textarea\" className=\"form-control\" placeholder=\"Enter Summary...\" name=\"postSummary\"\r\n                                            ref = {node=>{\r\n                                                summaryInput = node\r\n                                            }}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                    \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <label className=\"control-label\">Post Image</label>\r\n                                        <div class=\"input-group\">\r\n                                            <span class=\"input-group-prepend\">\r\n                                                <span class=\"btn btn-default btn-file\">\r\n                                                    Browse… <input type=\"file\" id=\"imgInp\"\r\n                                                    onChange={({target:{files}})=>{\r\n                                                        imageInput = files[0]\r\n                                                        console.log(imageInput)\r\n                                                    }}/>\r\n                                                </span>\r\n                                            </span>\r\n                                            <input type=\"text\" readOnly/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <label className=\"control-label\">Select Verdict</label>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <label className=\"input-group-text\" for=\"inputGroupSelect01\">Verdict</label>\r\n                                            </div>\r\n                                            <select className=\"custom-select\" id=\"inputGroupSelect01\"\r\n                                            ref = {node=>{\r\n                                                verdictInput = node\r\n                                            }}>\r\n                                                <option selected>Choose...</option>\r\n                                                <option value=\"KharaSuch\">Khara Such</option>\r\n                                                <option value=\"Such\">Such</option>\r\n                                                <option value=\"Mumkin\">Mumkin</option>\r\n                                                <option value=\"Jhoot\">Jhoot</option>\r\n                                                <option value=\"FullJhoot\">Jhootay Ka Muun Kala</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"panel-footer\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"pull-right\">\r\n                                        <button type=\"button\" className=\"btn btn-danger reset\" onReset={this.resetHandler}>Reset</button>\r\n                                        <button type=\"submit\" className=\"btn btn-success submit\" form='post-form'>Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Aux>\r\n                )}\r\n        </Mutation>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass TagInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        inputValue: '',\r\n        tags: this.props.tags || []\r\n        }\r\n    }\r\n\r\n    handleNewTag = (tags) => {\r\n        if (this.props.onNewTag) this.props.onNewTag(tags);\r\n        if (this.props.onTagChange) this.props.onTagChange(tags);\r\n    }\r\n\r\n    handleInputChange = ({target: { value: inputValue }}) => {\r\n        inputValue = inputValue == ',' ? '' : inputValue;\r\n        this.setState({inputValue});\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        let { key, target: {value} } = e;\r\n        let { tags } = this.state;\r\n        switch (key) {\r\n        case 'Tab':\r\n            if (value) e.preventDefault();\r\n        case 'Enter':\r\n        case ',':\r\n            value = value.trim();\r\n            if (value && this.notDuplicate(tags, value)) {\r\n            this.addTag(value);\r\n            } else {\r\n            this.setState({inputValue: ''})\r\n            }\r\n            break;\r\n        case 'Backspace':\r\n            if (!value) {\r\n            this.handleTagDelete(tags.length - 1);\r\n            }\r\n            break;\r\n        default:\r\n        }\r\n    }\r\n\r\n    handleTagDelete = (index, e) => {\r\n        this.deleteTag(index, () => {\r\n        this.props.onTagChange(this.state.tags);\r\n        });\r\n    }\r\n\r\n    deleteTag = (index, callback) => {\r\n        let tags = this.state.tags.slice();\r\n        tags.splice(index, 1);\r\n        this.setState({ tags }, () => {\r\n        if (callback) callback();\r\n        });\r\n    }\r\n\r\n    notDuplicate = (tags, newTag) => {\r\n        return (!tags.includes(newTag) || this.props.allowDuplicates);\r\n    }\r\n\r\n    addTag = tag => {\r\n        if (this.notDuplicate(this.state.tags, tag)) {\r\n        this.setState({tags: [...this.state.tags, tag], inputValue: ''}, () => {\r\n            this.handleNewTag(this.state.tags);\r\n        });\r\n        }\r\n    }\r\n\r\n    updateControlledTags = tags => {\r\n        if (tags && !Helpers.hasDuplicates(tags)) {\r\n        this.setState({ tags }, () => {\r\n            // this.props.onTagChange(tags);\r\n        });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.updateControlledTags(nextProps.tags);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <span className=\"tagInputWrapper\">\r\n            <TagsList \r\n            tags={this.state.tags} \r\n            onTagDelete={this.handleTagDelete} \r\n            hashtag={this.props.hashtag}\r\n            />\r\n            <input \r\n            name=\"tagInput\" \r\n            className=\"tagInput\" \r\n            placeholder=\"enter a tag...\" \r\n            value={this.state.inputValue} \r\n            onChange={this.handleInputChange}\r\n            onKeyDown={this.handleKeyDown}\r\n            />\r\n        </span>\r\n        );\r\n    }\r\n}\r\nclass Helpers {\r\n    static contains(orig, filter) {\r\n        let res = filter.map(item => {\r\n        return orig.includes(item);\r\n        });\r\n        return !res.includes(false);\r\n    }\r\n\r\n    static hasDuplicates(array) {\r\n        return (new Set(array)).size !== array.length;\r\n    }\r\n    }\r\n\r\n\r\nconst TagsList = ({tags, onTagDelete, hashtag}) => {\r\n    let list = tags.map((tag, index) => (\r\n    <Tag \r\n        name={tag} \r\n        onDelete={onTagDelete} \r\n        index={index} \r\n        hashtag={hashtag} />\r\n    ));\r\n    return (\r\n        <ul name=\"tagsList\" className=\"tagsList\">\r\n            {list}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Tag = ({name, index, onDelete, hashtag, hashtagStyle}) => {\r\n    return (\r\n        <li>\r\n            {hashtag && (\r\n                <span style={{color: '#898989', fontWeight: 'bold', ...hashtagStyle}}># </span>\r\n            )}\r\n            {name} \r\n            <a href=\"#\" onClick={e => onDelete(index, e)}>x</a>\r\n    </li>\r\n    );\r\n}\r\n\r\n\r\nexport default PostCreator;"]},"metadata":{},"sourceType":"module"}